# Run instances to run zabbix

#
# MySQL Server for Zabbix
#

- name: Create a mysql server EC2 instance
  local_action:
    module: ec2
    ec2_url: "{{ ec2_url }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    ec2_access_key: "{{ ec2_access_key }}"
    zone: "{{ mysql_az }}"
    image: "{{ mysql_emi }}"
    key_name: "{{ ssh_key }}"
    group: "{{ zabbix_mysql_sg_name }}"
    instance_type: "{{ mysql_instance_type }}"
    assign_public_ip: no
    monitoring: yes
    wait: yes
    wait_timeout: 600
    vpc_subnet_id: None
  register: ec2_mysql

- name: Wait for SSH to be enable
  local_action:
    wait_for host={{ ec2_mysql.instances[0].public_ip }}
    port=22
    delay={{ ssh_delay }}
    timeout={{ ssh_timeout }}
    state=started

- name: define new hosts
  add_host: hostname={{ ec2_mysql.instances[0].public_ip }} groupname=ec2_mysql


#
# Zabbix Master instance
#

- name: Create the Zabbix Master server EC2 instance
  local_action:
    module: ec2
    ec2_url: "{{ ec2_url }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    ec2_access_key: "{{ ec2_access_key }}"
    zone: "{{ zmaster_az }}"
    image: "{{ zmaster_emi }}"
    key_name: "{{ ssh_key }}"
    group: "{{ zabbix_master_sg_name }}"
    instance_type: "{{ zmaster_instance_type }}"
    assign_public_ip: no
    monitoring: yes
    wait: yes
    wait_timeout: 600
    vpc_subnet_id: None
  register: ec2_zmaster

- name: Wait for SSH to be enable
  local_action:
    wait_for
    host={{ ec2_zmaster.instances[0].public_ip }}
    port=22 delay={{ ssh_delay }}
    timeout={{ ssh_timeout }}
    state=started

- name: define new hosts
  add_host: hostname={{ ec2_zmaster.instances[0].public_ip }} groupname=ec2_zmaster

# 
# Front-End EC2 instance
#

- name: Create the Zabbix FrontEnd EC2 instance
  local_action:
    module: ec2
    ec2_url: "{{ ec2_url }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    ec2_access_key: "{{ ec2_access_key }}"
    zone: "{{ zfront_az }}"
    image: "{{ zfront_emi }}"
    key_name: "{{ ssh_key }}"
    group: "{{ zabbix_frontend_sg_name }}"
    instance_type: "{{ zfront_instance_type }}"
    assign_public_ip: no
    monitoring: yes
    wait: yes
    wait_timeout: 600
    vpc_subnet_id: None
  register: ec2_zfront

- name: Wait for SSH to be enable
  local_action:
    wait_for
    host={{ ec2_zfront.instances[0].public_ip }}
    port=22
    delay={{ ssh_delay }}
    timeout={{ ssh_timeout }}
    state=started

- name: define new hosts
  add_host: hostname={{ ec2_zfront.instances[0].public_ip }} groupname=ec2_zfront
